{"version":3,"sources":["App.js","Teacher.js","Contact.js","serviceWorker.js","index.js"],"names":["App","props","handleChange","event","setState","target","name","value","validate","nameError","state","fullname","rollnumber","class","section","alert","Number","sec","handlesubmit","rollNumbererror","classerror","sectionerror","bind","className","onSubmit","this","type","placeholder","Name","onChange","React","Component","Teacher","teacherid","Contact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","id","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2acae954.chunk.js","sourcesContent":["import  React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport firebase from 'firebase';\nimport { Link } from 'react-router-dom';\nimport About from './About.js';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nclass App extends React.Component{\n    /*componentWillMount(){\n          var firebaseConfig = {\n        apiKey: \"AIzaSyApPYXubqRixlQTZa-N5EIiIB9TST_uZMo\",\n        authDomain: \"reactproject-5f123.firebaseapp.com\",\n        databaseURL: \"https://reactproject-5f123.firebaseio.com\",\n        projectId: \"reactproject-5f123\",\n        storageBucket: \"reactproject-5f123.appspot.com\",\n        messagingSenderId: \"1048146148476\",\n        appId: \"1:1048146148476:web:92694c3baa3c4f6522ddf9\",\n        measurementId: \"G-0VLXBFE7LG\"\n    };\n    // Initialize Firebase\n    firebase.initializeApp(firebaseConfig);\n    firebase.analytics();\n    \n    firebase.database().ref()\n    }*/\n    constructor(props){\n      super(props);\n      this.state={\n          fullname: \"\",\n          rollnumber: \"\",\n          class: \"\",\n          section: \"\",\n          nameError: \"\",\n          rollNumbererror: \"\",\n          classerror:\"\",\n          sectionerror:\"\"\n        }\n          this.handleChange =this.handleChange.bind(this);\n            }\n    handleChange =(event) =>{\n      this.setState({[event.target.name] :event.target.value})\n    }\n    validate = () =>{\n        let nameError: \"\";\n        if(!this.state.fullname  || !this.state.rollnumber ||!this.state.class || !this.state.section ){\n          alert(\"All Fields Are Compulsory\");\n          nameError=\"Error\";\n        }\n          if (!Number(this.state.rollnumber)) {\n            alert(\"Your rollNumber must be a number\");\n            nameError=\"Error\";\n          }\n          if (this.state.class<1 ||this.state.class>12) {\n            alert(\"Class must be in the range of 1 - 12\");\n            nameError=\"Error\";\n          }\n          let sec=this.state.section;\n          if(sec!==\"A\" && sec!==\"B\"  && sec!==\"C\"  && sec!==\"D\"  && sec!==\"E\"  && sec!==\"F\" ){\n            alert(\"Section must be from A-F\");\n            nameError=\"Error\";\n         }\n        if(nameError){\n          this.setState({nameError});\n          return false;\n        }\n        return true;\n    }\n    handlesubmit =(event) =>{\n      alert(`name: ${this.state.fullname} Roll number: ${this.state.rollnumber} Class: ${this.state.class} Section: ${this.state.section}`);\n    //  event.preventDefault();\n      const isValid =this.validate();\n      if(isValid){\n        alert(\"Form Successfully Submitted\");\n      }\n    }\n      render(){\n        return (\n         <div className=\"container\">\n            <header className=\"App-header\">\n              <h1>Student Info</h1>\n                  </header>\n            <div className=\"jumbotron\">\n            <h2>Add Student</h2>\n           \n            <form onSubmit={this.handlesubmit}>\n            <input type=\"text\" placeholder=\"Enter the student name\" Name=\"fullname\"value={this.state.fullname}\n             onChange={ this.handleChange} / >\n             <div>\n              {this.state.nameError}\n             </div>\n            <br />\n            <input type=\"text\" placeholder=\"Enter the Roll number\" Name=\"rollnumber\"    value={this.state.rollnumber}\n             onChange= {this.handleChange}/ >\n             <div>\n              {this.state.rollNumbererror}\n             </div>\n              <br />\n            <input type=\"text\" placeholder=\"Enter the class\" Name=\"class\"    value={this.state.class}\n               onChange={ this.handleChange} / >\n               <div>\n                {this.state.classerror}\n               </div>\n              <br />\n            <input type=\"text\" placeholder=\"Enter the section\"  Name=\"section\"    value={this.state.section}\n             onChange={ this.handleChange}/ >\n             <div>\n              {this.state.sectionerror}\n             </div>\n              <br />\n              <input type=\"submit\" className=\"Submit\" value=\"Add student\" / >\n              </form>\n            </div>\n        </div>\n        );\n      }\n    }   \nexport default App;\n","import React from 'react';\r\nclass Teacher extends React.Component{\r\nconstructor(props){\r\n  super(props);\r\n  this.state ={\r\n                fullname: \"\",\r\n                teacherid: \"\",\r\n                class: \"\",\r\n                nameError:\"\"\r\n              }\r\n            }\r\n\r\nhandleChange =(event) =>{\r\n  this.setState({[event.target.name] :event.target.value})\r\n}\r\nvalidate = () =>{\r\n  let nameError: \"\";\r\n  if(!this.state.fullname  || !this.state.teacherid ||!this.state.class || !this.state.section ){\r\n    alert(\"All Fields Are Compulsory\");\r\n    nameError=\"Error\";\r\n  }\r\n    if(this.state.fullname && !this.state.class) {\r\n      alert(\"Teacher must teach a class\");\r\n      nameError=\"Error\";\r\n    }\r\n    if(nameError){\r\n      this.setState({nameError});\r\n      return false;\r\n    }\r\n    return true;\r\n    }\r\nhandlesubmit =(event) =>{\r\n  alert(`Teacher Name: ${this.state.fullname} Teacher id: ${this.state.teacherid} Class & Section: ${this.state.class}`);\r\n  const isValid =this.validate();\r\n  if(isValid){\r\n    alert(\"Form Successfully Submitted\");\r\n}\r\n}\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"App-header\">\r\n          <h1>Teacher Info</h1>\r\n              </header>\r\n        <div className=\"jumbotron\">\r\n        <h2>Add Teacher</h2>\r\n        <form onSubmit={this.handlesubmit}>\r\n        <input type=\"text\" placeholder=\"Enter the Teacher name\" Name=\"fullname\" value={this.state.fullname}\r\n         onChange={ this.handleChange} / >\r\n        <br />\r\n        <br />\r\n        <input type=\"text\" placeholder=\"Enter The Teacher Id\" Name=\"teacherid\" value={this.state.teacherid}\r\n         onChange= {this.handleChange}/ >\r\n          <br /><br />\r\n          <div>\r\n          </div>\r\n        <input type=\"text\" placeholder=\"Enter the classes with sections taught by the teacher\" Name=\"class\" value={this.state.class}\r\n           onChange={ this.handleChange} / >\r\n          <br /><br />\r\n          <input type=\"submit\" className=\"Submit\" value=\"Add Teacher\" / >\r\n          <div>\r\n              {this.state.nameError}\r\n             </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Teacher;\r\n","import React from 'react';\r\n \r\nconst Contact = () => {\r\n    return (\r\n       <div>\r\n          <h1>Contact US</h1>\r\n          <p>Contact US page body content</p>\r\n       </div>\r\n    );\r\n}\r\n \r\nexport default Contact;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Teacher from './Teacher';\nimport Contact from './Contact';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { BrowserRouter, Route, Switch,NavLink } from 'react-router-dom';\nReactDOM.render(\n      <React.StrictMode>\n      <div className=\"wrapper\">\n      <h1>Home</h1>\n      <nav id=\"sidebar\">\n      <h4>Teacher</h4>\n      <h4>Student</h4>\n      <BrowserRouter>\n      <div>\n\n           <Switch>\n             <Route path=\"/contact\" component={Contact}/>\n           </Switch>\n        </div> \n      </BrowserRouter>\n      </nav>\n     \n      <div id=\"content\">\n     \n\n        <App />\n        <Teacher />\n        </div>\n        </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}